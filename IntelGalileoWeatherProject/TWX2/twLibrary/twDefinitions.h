/*
 *  Copyright (C) 2014 ThingWorx Inc.
 *
 *  Common definitions for C SDK
 */

#ifndef TW_DEFINITIONS_H
#define TW_DEFINITIONS_H

#include "twErrors.h"

#ifdef __cplusplus
extern "C" {
#endif

#define TRUE 1
#define FALSE 0

/***************************************/
/*  Basic Message structure components */
/***************************************/
#define TW_MSG_VERSION 0x01

enum msgType {
	TW_UNKNOWN = 0,
	TW_REQUEST,
	TW_RESPONSE,
	TW_AUTH,
	TW_BIND,
	TW_MULTIPART_REQ,
	TW_MULTIPART_RESP
};

enum msgCodeEnum {

	/****
	000 00001 - 0x01 GET
	000 00010 - 0x02 PUT
	000 00011 - 0x03 POST
	000 00100 - 0x04 DELETE
	000 01010 - 0x0A BIND
	000 01011 - 0x0B UNBIND
	000 01100 - 0x0D AUTH
	000 11111 - 0x1F KEEP_ALIVE
	****/
	TWX_UNKNOWN = 0,
	TWX_GET,
	TWX_PUT,
	TWX_POST,
	TWX_DEL,
	TWX_BIND = 0x0A,
	TWX_UNBIND,
	TWX_AUTH = 0x14,
	TWX_KEEP_ALIVE = 0x1F,

	/****
	010 00000 - 0x40 (2.00) Success

	100 00000 - 0x80 (4.00) Bad Request
	100 00001 - 0x81 (4.01) Unauthorized
	100 00010 - 0x82 (4.02) Bad Option
	100 00011 - 0x83 (4.03) Forbidden
	100 00100 - 0x84 (4.04) Not Found
	100 00101 - 0x85 (4.05) Method Not Allowed
	100 00110 - 0x80 (4.06) Not Acceptable
	100 01100 - 0x8C (4.12) Precondition Failed
	100 01101 - 0x8D (4.13) Request Entity Too Large
	100 01111 - 0x8F (4.15) Unsupported Content Format

	101 00000 - 0xA0 (5.00) Internal Server Error
	101 00001 - 0xA1 (5.01) Not Implemented
	101 00010 - 0xA2 (5.02) Bad Gateway
	101 00011 - 0xA1 (5.03) Service Unavailable
	101 00100 - 0xA4 (5.04) Gateway Timeout
	****/
	TWX_SUCCESS = 0x40,
	TWX_BAD_REQUEST = 0x80,
	TWX_UNAUTHORIZED,
	TWX_BAD_OPTION,
	TWX_FORBIDDEN,
	TWX_NOT_FOUND,
	TWX_METHOD_NOT_ALLOWED,
	TWX_NOT_ACCEPTABLE,
	TWX_PRECONDITION_FAILED = 0x8C,
	TWX_ENTITY_TOO_LARGE,
	TWX_UNSUPPORTED_CONTENT_FORMAT = 0x8F,
	TWX_INTERNAL_SERVER_ERROR = 0xA0,
	TWX_NOT_IMPLEMENTED,
	TWX_BAD_GATEWAY,
	TWX_SERVICE_UNAVAILABLE,
	TWX_GATEWAY_TIMEOUT
};

enum entityTypeEnum {
	TW_UNDEFINED = 0,
	TW_THING = 0x0A,
	TW_THINGSHAPES = 0x0B,
	TW_THINGTEMPLATES = 0x0C,
	TW_THINGPACKAGES = 0x0D,
	TW_NETWORKS = 0x0E,
	TW_DATASHAPES = 0x0F,
	TW_MODELTAGS = 0x14,
	TW_DATATAGS = 0x15,
	TW_MASHUPS = 0x1E,
	TW_WIDGETS = 0x1F,
	TW_STYLEDEFINITIONS = 0x20,
	TW_STATEDEFINITIONS = 0x21,
	TW_MENUS = 0x22,
	TW_MEDIAENTITIES = 0x23,
	TW_LOCALIZATIONTABLES = 0x24,
	TW_DASHBOARDS = 0x27,
	TW_LOGS = 0x28,
	TW_USERS = 0x32,
	TW_GROUPS = 0x33,
	TW_ORGANIZATIONS = 0x34,
	TW_APPLICATIONKEYS = 0x35,
	TW_DIRECTORYSERVICES = 0x36,
	TW_RESOURCE = 0x3C,
	TW_SCRIPTFUNCTIONLIBRARIES = 0x3D,
	TW_EXTENSIONPACKAGES = 0x46,
	TW_SUBSYSTEM = 0x50
};

enum characteristicEnum {
	TW_PROPERTIES = 1,
	TW_SERVICES,
	TW_EVENTS
};


enum BaseType {
	TW_NOTHING = -1,
	TW_STRING = 0,
	TW_NUMBER,
	TW_BOOLEAN,
	TW_DATETIME,
	TW_TIMESPAN,
	TW_INFOTABLE,
	TW_LOCATION,
	TW_XML,
	TW_JSON,
	TW_QUERY,
	TW_IMAGE,
	TW_HYPERLINK,
	TW_IMAGELINK,
	TW_PASSWORD,
	TW_HTML,
	TW_TEXT,
	TW_TAGS,
	TW_SCHEDULE,
	TW_VARIANT,
	TW_GUID = 20,
	TW_BLOB,
	TW_INTEGER,
  TW_PROPERTYNAME = 50,
  TW_SERVICENAME,
  TW_EVENTNAME,
	TW_THINGNAME = 100,
	TW_THINGSHAPENAME,
	TW_THINGTEMPLATENAME,
	TW_DATASHAPENAME = 104,
	TW_MASHUPNAME,
	TW_MENUNAME,
	TW_BASETYPENAME,
	TW_USERNAME,
	TW_GROUPNAME,
	TW_CATEGORYNAME,
	TW_STATEDEFINITIONNAME,
	TW_STYLEDEFINITIONNAME,
	TW_MODELTAGVOCABULARYNAME,
	TW_DATATAGVOCABULARYNAME,
	TW_NETWORKNAME,
	TW_MEDIAENTITYNAME,
	TW_APPLICATIONKEYNAME,
	TW_LOCALIZATIONTABLENAME,
	TW_ORGANIZATIONNAME,
  TW_DASHBOARDNAME
};

/* File Transfer defines */
extern char * fileXferServices[];
#define TW_VIRTUAL_STAGING_DIR "__staging__"

#define LIST_ALL 0 
#define LIST_FILES 1 
#define LIST_DIRS 2 

#ifdef __cplusplus
}
#endif

#endif
